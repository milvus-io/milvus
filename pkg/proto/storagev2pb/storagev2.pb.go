// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v3.21.4
// source: storagev2.proto

package storagev2pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LogicType int32

const (
	LogicType_NA                LogicType = 0
	LogicType_BOOL              LogicType = 1
	LogicType_UINT8             LogicType = 2
	LogicType_INT8              LogicType = 3
	LogicType_UINT16            LogicType = 4
	LogicType_INT16             LogicType = 5
	LogicType_UINT32            LogicType = 6
	LogicType_INT32             LogicType = 7
	LogicType_UINT64            LogicType = 8
	LogicType_INT64             LogicType = 9
	LogicType_HALF_FLOAT        LogicType = 10
	LogicType_FLOAT             LogicType = 11
	LogicType_DOUBLE            LogicType = 12
	LogicType_STRING            LogicType = 13
	LogicType_BINARY            LogicType = 14
	LogicType_FIXED_SIZE_BINARY LogicType = 15
	// DATE32 = 16;
	// DATE64 = 17;
	// TIMESTAMP = 18;
	// TIME32 = 19;
	// TIME64 = 20;
	// INTERVAL_MONTHS = 21;
	// INTERVAL_DAY_TIME = 22;
	// DECIMAL128 = 23;
	// option allow_alias = true;
	// DECIMAL = 23;  // DECIMAL==DECIMAL128
	// DECIMAL256 = 24;
	LogicType_LIST   LogicType = 25
	LogicType_STRUCT LogicType = 26
	// SPARSE_UNION = 27;
	// DENSE_UNION = 28;
	LogicType_DICTIONARY LogicType = 29
	LogicType_MAP        LogicType = 30
	// EXTENSION = 31;
	LogicType_FIXED_SIZE_LIST LogicType = 32
	// DURATION = 33;
	// LARGE_STRING = 34;
	// LARGE_BINARY = 35;
	// LARGE_LIST = 36;
	// INTERVAL_MONTH_DAY_NANO = 37;
	// RUN_END_ENCODED = 38;
	LogicType_MAX_ID LogicType = 39
)

// Enum value maps for LogicType.
var (
	LogicType_name = map[int32]string{
		0:  "NA",
		1:  "BOOL",
		2:  "UINT8",
		3:  "INT8",
		4:  "UINT16",
		5:  "INT16",
		6:  "UINT32",
		7:  "INT32",
		8:  "UINT64",
		9:  "INT64",
		10: "HALF_FLOAT",
		11: "FLOAT",
		12: "DOUBLE",
		13: "STRING",
		14: "BINARY",
		15: "FIXED_SIZE_BINARY",
		25: "LIST",
		26: "STRUCT",
		29: "DICTIONARY",
		30: "MAP",
		32: "FIXED_SIZE_LIST",
		39: "MAX_ID",
	}
	LogicType_value = map[string]int32{
		"NA":                0,
		"BOOL":              1,
		"UINT8":             2,
		"INT8":              3,
		"UINT16":            4,
		"INT16":             5,
		"UINT32":            6,
		"INT32":             7,
		"UINT64":            8,
		"INT64":             9,
		"HALF_FLOAT":        10,
		"FLOAT":             11,
		"DOUBLE":            12,
		"STRING":            13,
		"BINARY":            14,
		"FIXED_SIZE_BINARY": 15,
		"LIST":              25,
		"STRUCT":            26,
		"DICTIONARY":        29,
		"MAP":               30,
		"FIXED_SIZE_LIST":   32,
		"MAX_ID":            39,
	}
)

func (x LogicType) Enum() *LogicType {
	p := new(LogicType)
	*p = x
	return p
}

func (x LogicType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LogicType) Descriptor() protoreflect.EnumDescriptor {
	return file_storagev2_proto_enumTypes[0].Descriptor()
}

func (LogicType) Type() protoreflect.EnumType {
	return &file_storagev2_proto_enumTypes[0]
}

func (x LogicType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LogicType.Descriptor instead.
func (LogicType) EnumDescriptor() ([]byte, []int) {
	return file_storagev2_proto_rawDescGZIP(), []int{0}
}

type Endianness int32

const (
	Endianness_Little Endianness = 0
	Endianness_Big    Endianness = 1
)

// Enum value maps for Endianness.
var (
	Endianness_name = map[int32]string{
		0: "Little",
		1: "Big",
	}
	Endianness_value = map[string]int32{
		"Little": 0,
		"Big":    1,
	}
)

func (x Endianness) Enum() *Endianness {
	p := new(Endianness)
	*p = x
	return p
}

func (x Endianness) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Endianness) Descriptor() protoreflect.EnumDescriptor {
	return file_storagev2_proto_enumTypes[1].Descriptor()
}

func (Endianness) Type() protoreflect.EnumType {
	return &file_storagev2_proto_enumTypes[1]
}

func (x Endianness) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Endianness.Descriptor instead.
func (Endianness) EnumDescriptor() ([]byte, []int) {
	return file_storagev2_proto_rawDescGZIP(), []int{1}
}

type FixedSizeBinaryType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ByteWidth int32 `protobuf:"varint,1,opt,name=byte_width,json=byteWidth,proto3" json:"byte_width,omitempty"`
}

func (x *FixedSizeBinaryType) Reset() {
	*x = FixedSizeBinaryType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storagev2_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FixedSizeBinaryType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FixedSizeBinaryType) ProtoMessage() {}

func (x *FixedSizeBinaryType) ProtoReflect() protoreflect.Message {
	mi := &file_storagev2_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FixedSizeBinaryType.ProtoReflect.Descriptor instead.
func (*FixedSizeBinaryType) Descriptor() ([]byte, []int) {
	return file_storagev2_proto_rawDescGZIP(), []int{0}
}

func (x *FixedSizeBinaryType) GetByteWidth() int32 {
	if x != nil {
		return x.ByteWidth
	}
	return 0
}

type FixedSizeListType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListSize int32 `protobuf:"varint,1,opt,name=list_size,json=listSize,proto3" json:"list_size,omitempty"`
}

func (x *FixedSizeListType) Reset() {
	*x = FixedSizeListType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storagev2_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FixedSizeListType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FixedSizeListType) ProtoMessage() {}

func (x *FixedSizeListType) ProtoReflect() protoreflect.Message {
	mi := &file_storagev2_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FixedSizeListType.ProtoReflect.Descriptor instead.
func (*FixedSizeListType) Descriptor() ([]byte, []int) {
	return file_storagev2_proto_rawDescGZIP(), []int{1}
}

func (x *FixedSizeListType) GetListSize() int32 {
	if x != nil {
		return x.ListSize
	}
	return 0
}

type DictionaryType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IndexType *DataType `protobuf:"bytes,1,opt,name=index_type,json=indexType,proto3" json:"index_type,omitempty"`
	ValueType *DataType `protobuf:"bytes,2,opt,name=value_type,json=valueType,proto3" json:"value_type,omitempty"`
	Ordered   bool      `protobuf:"varint,3,opt,name=ordered,proto3" json:"ordered,omitempty"`
}

func (x *DictionaryType) Reset() {
	*x = DictionaryType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storagev2_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DictionaryType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DictionaryType) ProtoMessage() {}

func (x *DictionaryType) ProtoReflect() protoreflect.Message {
	mi := &file_storagev2_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DictionaryType.ProtoReflect.Descriptor instead.
func (*DictionaryType) Descriptor() ([]byte, []int) {
	return file_storagev2_proto_rawDescGZIP(), []int{2}
}

func (x *DictionaryType) GetIndexType() *DataType {
	if x != nil {
		return x.IndexType
	}
	return nil
}

func (x *DictionaryType) GetValueType() *DataType {
	if x != nil {
		return x.ValueType
	}
	return nil
}

func (x *DictionaryType) GetOrdered() bool {
	if x != nil {
		return x.Ordered
	}
	return false
}

type MapType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeysSorted bool `protobuf:"varint,1,opt,name=keys_sorted,json=keysSorted,proto3" json:"keys_sorted,omitempty"`
}

func (x *MapType) Reset() {
	*x = MapType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storagev2_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MapType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapType) ProtoMessage() {}

func (x *MapType) ProtoReflect() protoreflect.Message {
	mi := &file_storagev2_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapType.ProtoReflect.Descriptor instead.
func (*MapType) Descriptor() ([]byte, []int) {
	return file_storagev2_proto_rawDescGZIP(), []int{3}
}

func (x *MapType) GetKeysSorted() bool {
	if x != nil {
		return x.KeysSorted
	}
	return false
}

type DataType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to TypeRelatedValues:
	//
	//	*DataType_FixedSizeBinaryType
	//	*DataType_FixedSizeListType
	//	*DataType_DictionaryType
	//	*DataType_MapType
	TypeRelatedValues isDataType_TypeRelatedValues `protobuf_oneof:"type_related_values"`
	LogicType         LogicType                    `protobuf:"varint,100,opt,name=logic_type,json=logicType,proto3,enum=milvus.proto.storagev2.LogicType" json:"logic_type,omitempty"`
	Children          []*Field                     `protobuf:"bytes,101,rep,name=children,proto3" json:"children,omitempty"`
}

func (x *DataType) Reset() {
	*x = DataType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storagev2_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataType) ProtoMessage() {}

func (x *DataType) ProtoReflect() protoreflect.Message {
	mi := &file_storagev2_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataType.ProtoReflect.Descriptor instead.
func (*DataType) Descriptor() ([]byte, []int) {
	return file_storagev2_proto_rawDescGZIP(), []int{4}
}

func (m *DataType) GetTypeRelatedValues() isDataType_TypeRelatedValues {
	if m != nil {
		return m.TypeRelatedValues
	}
	return nil
}

func (x *DataType) GetFixedSizeBinaryType() *FixedSizeBinaryType {
	if x, ok := x.GetTypeRelatedValues().(*DataType_FixedSizeBinaryType); ok {
		return x.FixedSizeBinaryType
	}
	return nil
}

func (x *DataType) GetFixedSizeListType() *FixedSizeListType {
	if x, ok := x.GetTypeRelatedValues().(*DataType_FixedSizeListType); ok {
		return x.FixedSizeListType
	}
	return nil
}

func (x *DataType) GetDictionaryType() *DictionaryType {
	if x, ok := x.GetTypeRelatedValues().(*DataType_DictionaryType); ok {
		return x.DictionaryType
	}
	return nil
}

func (x *DataType) GetMapType() *MapType {
	if x, ok := x.GetTypeRelatedValues().(*DataType_MapType); ok {
		return x.MapType
	}
	return nil
}

func (x *DataType) GetLogicType() LogicType {
	if x != nil {
		return x.LogicType
	}
	return LogicType_NA
}

func (x *DataType) GetChildren() []*Field {
	if x != nil {
		return x.Children
	}
	return nil
}

type isDataType_TypeRelatedValues interface {
	isDataType_TypeRelatedValues()
}

type DataType_FixedSizeBinaryType struct {
	FixedSizeBinaryType *FixedSizeBinaryType `protobuf:"bytes,1,opt,name=fixed_size_binary_type,json=fixedSizeBinaryType,proto3,oneof"`
}

type DataType_FixedSizeListType struct {
	FixedSizeListType *FixedSizeListType `protobuf:"bytes,2,opt,name=fixed_size_list_type,json=fixedSizeListType,proto3,oneof"`
}

type DataType_DictionaryType struct {
	DictionaryType *DictionaryType `protobuf:"bytes,3,opt,name=dictionary_type,json=dictionaryType,proto3,oneof"`
}

type DataType_MapType struct {
	MapType *MapType `protobuf:"bytes,4,opt,name=map_type,json=mapType,proto3,oneof"`
}

func (*DataType_FixedSizeBinaryType) isDataType_TypeRelatedValues() {}

func (*DataType_FixedSizeListType) isDataType_TypeRelatedValues() {}

func (*DataType_DictionaryType) isDataType_TypeRelatedValues() {}

func (*DataType_MapType) isDataType_TypeRelatedValues() {}

type KeyValueMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys   []string `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"`
	Values []string `protobuf:"bytes,2,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *KeyValueMetadata) Reset() {
	*x = KeyValueMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storagev2_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyValueMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyValueMetadata) ProtoMessage() {}

func (x *KeyValueMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_storagev2_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyValueMetadata.ProtoReflect.Descriptor instead.
func (*KeyValueMetadata) Descriptor() ([]byte, []int) {
	return file_storagev2_proto_rawDescGZIP(), []int{5}
}

func (x *KeyValueMetadata) GetKeys() []string {
	if x != nil {
		return x.Keys
	}
	return nil
}

func (x *KeyValueMetadata) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

type Field struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Nullable bool              `protobuf:"varint,2,opt,name=nullable,proto3" json:"nullable,omitempty"`
	DataType *DataType         `protobuf:"bytes,3,opt,name=data_type,json=dataType,proto3" json:"data_type,omitempty"`
	Metadata *KeyValueMetadata `protobuf:"bytes,4,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *Field) Reset() {
	*x = Field{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storagev2_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Field) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Field) ProtoMessage() {}

func (x *Field) ProtoReflect() protoreflect.Message {
	mi := &file_storagev2_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Field.ProtoReflect.Descriptor instead.
func (*Field) Descriptor() ([]byte, []int) {
	return file_storagev2_proto_rawDescGZIP(), []int{6}
}

func (x *Field) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Field) GetNullable() bool {
	if x != nil {
		return x.Nullable
	}
	return false
}

func (x *Field) GetDataType() *DataType {
	if x != nil {
		return x.DataType
	}
	return nil
}

func (x *Field) GetMetadata() *KeyValueMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type SchemaOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PrimaryColumn string `protobuf:"bytes,1,opt,name=primary_column,json=primaryColumn,proto3" json:"primary_column,omitempty"`
	VersionColumn string `protobuf:"bytes,2,opt,name=version_column,json=versionColumn,proto3" json:"version_column,omitempty"`
	VectorColumn  string `protobuf:"bytes,3,opt,name=vector_column,json=vectorColumn,proto3" json:"vector_column,omitempty"`
}

func (x *SchemaOptions) Reset() {
	*x = SchemaOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storagev2_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SchemaOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchemaOptions) ProtoMessage() {}

func (x *SchemaOptions) ProtoReflect() protoreflect.Message {
	mi := &file_storagev2_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchemaOptions.ProtoReflect.Descriptor instead.
func (*SchemaOptions) Descriptor() ([]byte, []int) {
	return file_storagev2_proto_rawDescGZIP(), []int{7}
}

func (x *SchemaOptions) GetPrimaryColumn() string {
	if x != nil {
		return x.PrimaryColumn
	}
	return ""
}

func (x *SchemaOptions) GetVersionColumn() string {
	if x != nil {
		return x.VersionColumn
	}
	return ""
}

func (x *SchemaOptions) GetVectorColumn() string {
	if x != nil {
		return x.VectorColumn
	}
	return ""
}

type ArrowSchema struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fields     []*Field          `protobuf:"bytes,1,rep,name=fields,proto3" json:"fields,omitempty"`
	Endianness Endianness        `protobuf:"varint,2,opt,name=endianness,proto3,enum=milvus.proto.storagev2.Endianness" json:"endianness,omitempty"`
	Metadata   *KeyValueMetadata `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *ArrowSchema) Reset() {
	*x = ArrowSchema{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storagev2_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArrowSchema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArrowSchema) ProtoMessage() {}

func (x *ArrowSchema) ProtoReflect() protoreflect.Message {
	mi := &file_storagev2_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArrowSchema.ProtoReflect.Descriptor instead.
func (*ArrowSchema) Descriptor() ([]byte, []int) {
	return file_storagev2_proto_rawDescGZIP(), []int{8}
}

func (x *ArrowSchema) GetFields() []*Field {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *ArrowSchema) GetEndianness() Endianness {
	if x != nil {
		return x.Endianness
	}
	return Endianness_Little
}

func (x *ArrowSchema) GetMetadata() *KeyValueMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type Schema struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ArrowSchema   *ArrowSchema   `protobuf:"bytes,1,opt,name=arrow_schema,json=arrowSchema,proto3" json:"arrow_schema,omitempty"`
	SchemaOptions *SchemaOptions `protobuf:"bytes,2,opt,name=schema_options,json=schemaOptions,proto3" json:"schema_options,omitempty"`
}

func (x *Schema) Reset() {
	*x = Schema{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storagev2_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Schema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Schema) ProtoMessage() {}

func (x *Schema) ProtoReflect() protoreflect.Message {
	mi := &file_storagev2_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Schema.ProtoReflect.Descriptor instead.
func (*Schema) Descriptor() ([]byte, []int) {
	return file_storagev2_proto_rawDescGZIP(), []int{9}
}

func (x *Schema) GetArrowSchema() *ArrowSchema {
	if x != nil {
		return x.ArrowSchema
	}
	return nil
}

func (x *Schema) GetSchemaOptions() *SchemaOptions {
	if x != nil {
		return x.SchemaOptions
	}
	return nil
}

type Options struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uri string `protobuf:"bytes,1,opt,name=uri,proto3" json:"uri,omitempty"`
}

func (x *Options) Reset() {
	*x = Options{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storagev2_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Options) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Options) ProtoMessage() {}

func (x *Options) ProtoReflect() protoreflect.Message {
	mi := &file_storagev2_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Options.ProtoReflect.Descriptor instead.
func (*Options) Descriptor() ([]byte, []int) {
	return file_storagev2_proto_rawDescGZIP(), []int{10}
}

func (x *Options) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

type Manifest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version         int64       `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	Options         *Options    `protobuf:"bytes,2,opt,name=options,proto3" json:"options,omitempty"`
	Schema          *Schema     `protobuf:"bytes,3,opt,name=schema,proto3" json:"schema,omitempty"`
	ScalarFragments []*Fragment `protobuf:"bytes,4,rep,name=scalar_fragments,json=scalarFragments,proto3" json:"scalar_fragments,omitempty"`
	VectorFragments []*Fragment `protobuf:"bytes,5,rep,name=vector_fragments,json=vectorFragments,proto3" json:"vector_fragments,omitempty"`
	DeleteFragments []*Fragment `protobuf:"bytes,6,rep,name=delete_fragments,json=deleteFragments,proto3" json:"delete_fragments,omitempty"`
	Blobs           []*Blob     `protobuf:"bytes,7,rep,name=blobs,proto3" json:"blobs,omitempty"`
}

func (x *Manifest) Reset() {
	*x = Manifest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storagev2_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Manifest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Manifest) ProtoMessage() {}

func (x *Manifest) ProtoReflect() protoreflect.Message {
	mi := &file_storagev2_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Manifest.ProtoReflect.Descriptor instead.
func (*Manifest) Descriptor() ([]byte, []int) {
	return file_storagev2_proto_rawDescGZIP(), []int{11}
}

func (x *Manifest) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *Manifest) GetOptions() *Options {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *Manifest) GetSchema() *Schema {
	if x != nil {
		return x.Schema
	}
	return nil
}

func (x *Manifest) GetScalarFragments() []*Fragment {
	if x != nil {
		return x.ScalarFragments
	}
	return nil
}

func (x *Manifest) GetVectorFragments() []*Fragment {
	if x != nil {
		return x.VectorFragments
	}
	return nil
}

func (x *Manifest) GetDeleteFragments() []*Fragment {
	if x != nil {
		return x.DeleteFragments
	}
	return nil
}

func (x *Manifest) GetBlobs() []*Blob {
	if x != nil {
		return x.Blobs
	}
	return nil
}

type Fragment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Files []string `protobuf:"bytes,2,rep,name=files,proto3" json:"files,omitempty"`
}

func (x *Fragment) Reset() {
	*x = Fragment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storagev2_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Fragment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Fragment) ProtoMessage() {}

func (x *Fragment) ProtoReflect() protoreflect.Message {
	mi := &file_storagev2_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Fragment.ProtoReflect.Descriptor instead.
func (*Fragment) Descriptor() ([]byte, []int) {
	return file_storagev2_proto_rawDescGZIP(), []int{12}
}

func (x *Fragment) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Fragment) GetFiles() []string {
	if x != nil {
		return x.Files
	}
	return nil
}

type Blob struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Size int64  `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	File string `protobuf:"bytes,3,opt,name=file,proto3" json:"file,omitempty"`
}

func (x *Blob) Reset() {
	*x = Blob{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storagev2_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Blob) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Blob) ProtoMessage() {}

func (x *Blob) ProtoReflect() protoreflect.Message {
	mi := &file_storagev2_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Blob.ProtoReflect.Descriptor instead.
func (*Blob) Descriptor() ([]byte, []int) {
	return file_storagev2_proto_rawDescGZIP(), []int{13}
}

func (x *Blob) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Blob) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *Blob) GetFile() string {
	if x != nil {
		return x.File
	}
	return ""
}

var File_storagev2_proto protoreflect.FileDescriptor

var file_storagev2_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x76, 0x32, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x16, 0x6d, 0x69, 0x6c, 0x76, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x76, 0x32, 0x22, 0x34, 0x0a, 0x13, 0x46, 0x69, 0x78,
	0x65, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x79, 0x74, 0x65, 0x5f, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x62, 0x79, 0x74, 0x65, 0x57, 0x69, 0x64, 0x74, 0x68, 0x22,
	0x30, 0x0a, 0x11, 0x46, 0x69, 0x78, 0x65, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6c, 0x69, 0x73, 0x74, 0x53, 0x69, 0x7a,
	0x65, 0x22, 0xac, 0x01, 0x0a, 0x0e, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x3f, 0x0a, 0x0a, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6d, 0x69, 0x6c, 0x76, 0x75,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x76,
	0x32, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3f, 0x0a, 0x0a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6d, 0x69, 0x6c, 0x76,
	0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x76, 0x32, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x65,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x64,
	0x22, 0x2a, 0x0a, 0x07, 0x4d, 0x61, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6b,
	0x65, 0x79, 0x73, 0x5f, 0x73, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0a, 0x6b, 0x65, 0x79, 0x73, 0x53, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x22, 0xf1, 0x03, 0x0a,
	0x08, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x62, 0x0a, 0x16, 0x66, 0x69, 0x78,
	0x65, 0x64, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6d, 0x69, 0x6c, 0x76,
	0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x76, 0x32, 0x2e, 0x46, 0x69, 0x78, 0x65, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x42, 0x69, 0x6e, 0x61,
	0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x13, 0x66, 0x69, 0x78, 0x65, 0x64, 0x53,
	0x69, 0x7a, 0x65, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x5c, 0x0a,
	0x14, 0x66, 0x69, 0x78, 0x65, 0x64, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6d, 0x69,
	0x6c, 0x76, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x76, 0x32, 0x2e, 0x46, 0x69, 0x78, 0x65, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x11, 0x66, 0x69, 0x78, 0x65, 0x64, 0x53,
	0x69, 0x7a, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x51, 0x0a, 0x0f, 0x64,
	0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6d, 0x69, 0x6c, 0x76, 0x75, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x76, 0x32, 0x2e, 0x44, 0x69,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x0e,
	0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3c,
	0x0a, 0x08, 0x6d, 0x61, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x6d, 0x69, 0x6c, 0x76, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x76, 0x32, 0x2e, 0x4d, 0x61, 0x70, 0x54, 0x79, 0x70,
	0x65, 0x48, 0x00, 0x52, 0x07, 0x6d, 0x61, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x40, 0x0a, 0x0a,
	0x6c, 0x6f, 0x67, 0x69, 0x63, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x21, 0x2e, 0x6d, 0x69, 0x6c, 0x76, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x76, 0x32, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x63, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x09, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x54, 0x79, 0x70, 0x65, 0x12, 0x39,
	0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18, 0x65, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x6d, 0x69, 0x6c, 0x76, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x76, 0x32, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52,
	0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x42, 0x15, 0x0a, 0x13, 0x74, 0x79, 0x70,
	0x65, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x22, 0x3e, 0x0a, 0x10, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x22, 0xbc, 0x01, 0x0a, 0x05, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x6e, 0x75, 0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x6e, 0x75, 0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x3d, 0x0a, 0x09, 0x64, 0x61,
	0x74, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x6d, 0x69, 0x6c, 0x76, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x76, 0x32, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x08, 0x64, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x44, 0x0a, 0x08, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6d, 0x69,
	0x6c, 0x76, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x76, 0x32, 0x2e, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x82, 0x01, 0x0a, 0x0d, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x6c,
	0x75, 0x6d, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x72, 0x69, 0x6d, 0x61,
	0x72, 0x79, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12,
	0x23, 0x0a, 0x0d, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x43, 0x6f,
	0x6c, 0x75, 0x6d, 0x6e, 0x22, 0xce, 0x01, 0x0a, 0x0b, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x53, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x12, 0x35, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6d, 0x69, 0x6c, 0x76, 0x75, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x76, 0x32, 0x2e, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x42, 0x0a, 0x0a, 0x65,
	0x6e, 0x64, 0x69, 0x61, 0x6e, 0x6e, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x22, 0x2e, 0x6d, 0x69, 0x6c, 0x76, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x76, 0x32, 0x2e, 0x45, 0x6e, 0x64, 0x69, 0x61, 0x6e, 0x6e,
	0x65, 0x73, 0x73, 0x52, 0x0a, 0x65, 0x6e, 0x64, 0x69, 0x61, 0x6e, 0x6e, 0x65, 0x73, 0x73, 0x12,
	0x44, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x6d, 0x69, 0x6c, 0x76, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x76, 0x32, 0x2e, 0x4b, 0x65, 0x79, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x9e, 0x01, 0x0a, 0x06, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x12, 0x46, 0x0a, 0x0c, 0x61, 0x72, 0x72, 0x6f, 0x77, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6d, 0x69, 0x6c, 0x76, 0x75, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x76, 0x32, 0x2e,
	0x41, 0x72, 0x72, 0x6f, 0x77, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x0b, 0x61, 0x72, 0x72,
	0x6f, 0x77, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x4c, 0x0a, 0x0e, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x6d, 0x69, 0x6c, 0x76, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x76, 0x32, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0d, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x1b, 0x0a, 0x07, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x75, 0x72, 0x69, 0x22, 0xb2, 0x03, 0x0a, 0x08, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x07, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6d, 0x69,
	0x6c, 0x76, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x76, 0x32, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x07, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x36, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x69, 0x6c, 0x76, 0x75, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x76, 0x32, 0x2e, 0x53,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x4b, 0x0a,
	0x10, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x72, 0x5f, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6d, 0x69, 0x6c, 0x76, 0x75, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x76, 0x32,
	0x2e, 0x46, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0f, 0x73, 0x63, 0x61, 0x6c, 0x61,
	0x72, 0x46, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x4b, 0x0a, 0x10, 0x76, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x5f, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6d, 0x69, 0x6c, 0x76, 0x75, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x76, 0x32, 0x2e, 0x46, 0x72,
	0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0f, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x46, 0x72,
	0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x4b, 0x0a, 0x10, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x5f, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x6d, 0x69, 0x6c, 0x76, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x76, 0x32, 0x2e, 0x46, 0x72, 0x61, 0x67, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x0f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x72, 0x61, 0x67, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x12, 0x32, 0x0a, 0x05, 0x62, 0x6c, 0x6f, 0x62, 0x73, 0x18, 0x07, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6d, 0x69, 0x6c, 0x76, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x76, 0x32, 0x2e, 0x42, 0x6c, 0x6f,
	0x62, 0x52, 0x05, 0x62, 0x6c, 0x6f, 0x62, 0x73, 0x22, 0x30, 0x0a, 0x08, 0x46, 0x72, 0x61, 0x67,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x22, 0x42, 0x0a, 0x04, 0x42, 0x6c,
	0x6f, 0x62, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x69,
	0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x2a, 0x9d,
	0x02, 0x0a, 0x09, 0x4c, 0x6f, 0x67, 0x69, 0x63, 0x54, 0x79, 0x70, 0x65, 0x12, 0x06, 0x0a, 0x02,
	0x4e, 0x41, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x42, 0x4f, 0x4f, 0x4c, 0x10, 0x01, 0x12, 0x09,
	0x0a, 0x05, 0x55, 0x49, 0x4e, 0x54, 0x38, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x49, 0x4e, 0x54,
	0x38, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x55, 0x49, 0x4e, 0x54, 0x31, 0x36, 0x10, 0x04, 0x12,
	0x09, 0x0a, 0x05, 0x49, 0x4e, 0x54, 0x31, 0x36, 0x10, 0x05, 0x12, 0x0a, 0x0a, 0x06, 0x55, 0x49,
	0x4e, 0x54, 0x33, 0x32, 0x10, 0x06, 0x12, 0x09, 0x0a, 0x05, 0x49, 0x4e, 0x54, 0x33, 0x32, 0x10,
	0x07, 0x12, 0x0a, 0x0a, 0x06, 0x55, 0x49, 0x4e, 0x54, 0x36, 0x34, 0x10, 0x08, 0x12, 0x09, 0x0a,
	0x05, 0x49, 0x4e, 0x54, 0x36, 0x34, 0x10, 0x09, 0x12, 0x0e, 0x0a, 0x0a, 0x48, 0x41, 0x4c, 0x46,
	0x5f, 0x46, 0x4c, 0x4f, 0x41, 0x54, 0x10, 0x0a, 0x12, 0x09, 0x0a, 0x05, 0x46, 0x4c, 0x4f, 0x41,
	0x54, 0x10, 0x0b, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x4f, 0x55, 0x42, 0x4c, 0x45, 0x10, 0x0c, 0x12,
	0x0a, 0x0a, 0x06, 0x53, 0x54, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x0d, 0x12, 0x0a, 0x0a, 0x06, 0x42,
	0x49, 0x4e, 0x41, 0x52, 0x59, 0x10, 0x0e, 0x12, 0x15, 0x0a, 0x11, 0x46, 0x49, 0x58, 0x45, 0x44,
	0x5f, 0x53, 0x49, 0x5a, 0x45, 0x5f, 0x42, 0x49, 0x4e, 0x41, 0x52, 0x59, 0x10, 0x0f, 0x12, 0x08,
	0x0a, 0x04, 0x4c, 0x49, 0x53, 0x54, 0x10, 0x19, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x54, 0x52, 0x55,
	0x43, 0x54, 0x10, 0x1a, 0x12, 0x0e, 0x0a, 0x0a, 0x44, 0x49, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x41,
	0x52, 0x59, 0x10, 0x1d, 0x12, 0x07, 0x0a, 0x03, 0x4d, 0x41, 0x50, 0x10, 0x1e, 0x12, 0x13, 0x0a,
	0x0f, 0x46, 0x49, 0x58, 0x45, 0x44, 0x5f, 0x53, 0x49, 0x5a, 0x45, 0x5f, 0x4c, 0x49, 0x53, 0x54,
	0x10, 0x20, 0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x41, 0x58, 0x5f, 0x49, 0x44, 0x10, 0x27, 0x2a, 0x21,
	0x0a, 0x0a, 0x45, 0x6e, 0x64, 0x69, 0x61, 0x6e, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x0a, 0x0a, 0x06,
	0x4c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x42, 0x69, 0x67, 0x10,
	0x01, 0x42, 0x33, 0x5a, 0x31, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x6d, 0x69, 0x6c, 0x76, 0x75, 0x73, 0x2d, 0x69, 0x6f, 0x2f, 0x6d, 0x69, 0x6c, 0x76, 0x75, 0x73,
	0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x76, 0x32, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_storagev2_proto_rawDescOnce sync.Once
	file_storagev2_proto_rawDescData = file_storagev2_proto_rawDesc
)

func file_storagev2_proto_rawDescGZIP() []byte {
	file_storagev2_proto_rawDescOnce.Do(func() {
		file_storagev2_proto_rawDescData = protoimpl.X.CompressGZIP(file_storagev2_proto_rawDescData)
	})
	return file_storagev2_proto_rawDescData
}

var file_storagev2_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_storagev2_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_storagev2_proto_goTypes = []interface{}{
	(LogicType)(0),              // 0: milvus.proto.storagev2.LogicType
	(Endianness)(0),             // 1: milvus.proto.storagev2.Endianness
	(*FixedSizeBinaryType)(nil), // 2: milvus.proto.storagev2.FixedSizeBinaryType
	(*FixedSizeListType)(nil),   // 3: milvus.proto.storagev2.FixedSizeListType
	(*DictionaryType)(nil),      // 4: milvus.proto.storagev2.DictionaryType
	(*MapType)(nil),             // 5: milvus.proto.storagev2.MapType
	(*DataType)(nil),            // 6: milvus.proto.storagev2.DataType
	(*KeyValueMetadata)(nil),    // 7: milvus.proto.storagev2.KeyValueMetadata
	(*Field)(nil),               // 8: milvus.proto.storagev2.Field
	(*SchemaOptions)(nil),       // 9: milvus.proto.storagev2.SchemaOptions
	(*ArrowSchema)(nil),         // 10: milvus.proto.storagev2.ArrowSchema
	(*Schema)(nil),              // 11: milvus.proto.storagev2.Schema
	(*Options)(nil),             // 12: milvus.proto.storagev2.Options
	(*Manifest)(nil),            // 13: milvus.proto.storagev2.Manifest
	(*Fragment)(nil),            // 14: milvus.proto.storagev2.Fragment
	(*Blob)(nil),                // 15: milvus.proto.storagev2.Blob
}
var file_storagev2_proto_depIdxs = []int32{
	6,  // 0: milvus.proto.storagev2.DictionaryType.index_type:type_name -> milvus.proto.storagev2.DataType
	6,  // 1: milvus.proto.storagev2.DictionaryType.value_type:type_name -> milvus.proto.storagev2.DataType
	2,  // 2: milvus.proto.storagev2.DataType.fixed_size_binary_type:type_name -> milvus.proto.storagev2.FixedSizeBinaryType
	3,  // 3: milvus.proto.storagev2.DataType.fixed_size_list_type:type_name -> milvus.proto.storagev2.FixedSizeListType
	4,  // 4: milvus.proto.storagev2.DataType.dictionary_type:type_name -> milvus.proto.storagev2.DictionaryType
	5,  // 5: milvus.proto.storagev2.DataType.map_type:type_name -> milvus.proto.storagev2.MapType
	0,  // 6: milvus.proto.storagev2.DataType.logic_type:type_name -> milvus.proto.storagev2.LogicType
	8,  // 7: milvus.proto.storagev2.DataType.children:type_name -> milvus.proto.storagev2.Field
	6,  // 8: milvus.proto.storagev2.Field.data_type:type_name -> milvus.proto.storagev2.DataType
	7,  // 9: milvus.proto.storagev2.Field.metadata:type_name -> milvus.proto.storagev2.KeyValueMetadata
	8,  // 10: milvus.proto.storagev2.ArrowSchema.fields:type_name -> milvus.proto.storagev2.Field
	1,  // 11: milvus.proto.storagev2.ArrowSchema.endianness:type_name -> milvus.proto.storagev2.Endianness
	7,  // 12: milvus.proto.storagev2.ArrowSchema.metadata:type_name -> milvus.proto.storagev2.KeyValueMetadata
	10, // 13: milvus.proto.storagev2.Schema.arrow_schema:type_name -> milvus.proto.storagev2.ArrowSchema
	9,  // 14: milvus.proto.storagev2.Schema.schema_options:type_name -> milvus.proto.storagev2.SchemaOptions
	12, // 15: milvus.proto.storagev2.Manifest.options:type_name -> milvus.proto.storagev2.Options
	11, // 16: milvus.proto.storagev2.Manifest.schema:type_name -> milvus.proto.storagev2.Schema
	14, // 17: milvus.proto.storagev2.Manifest.scalar_fragments:type_name -> milvus.proto.storagev2.Fragment
	14, // 18: milvus.proto.storagev2.Manifest.vector_fragments:type_name -> milvus.proto.storagev2.Fragment
	14, // 19: milvus.proto.storagev2.Manifest.delete_fragments:type_name -> milvus.proto.storagev2.Fragment
	15, // 20: milvus.proto.storagev2.Manifest.blobs:type_name -> milvus.proto.storagev2.Blob
	21, // [21:21] is the sub-list for method output_type
	21, // [21:21] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_storagev2_proto_init() }
func file_storagev2_proto_init() {
	if File_storagev2_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_storagev2_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FixedSizeBinaryType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storagev2_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FixedSizeListType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storagev2_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DictionaryType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storagev2_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MapType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storagev2_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storagev2_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyValueMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storagev2_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Field); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storagev2_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SchemaOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storagev2_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArrowSchema); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storagev2_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Schema); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storagev2_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Options); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storagev2_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Manifest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storagev2_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Fragment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storagev2_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Blob); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_storagev2_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*DataType_FixedSizeBinaryType)(nil),
		(*DataType_FixedSizeListType)(nil),
		(*DataType_DictionaryType)(nil),
		(*DataType_MapType)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_storagev2_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_storagev2_proto_goTypes,
		DependencyIndexes: file_storagev2_proto_depIdxs,
		EnumInfos:         file_storagev2_proto_enumTypes,
		MessageInfos:      file_storagev2_proto_msgTypes,
	}.Build()
	File_storagev2_proto = out.File
	file_storagev2_proto_rawDesc = nil
	file_storagev2_proto_goTypes = nil
	file_storagev2_proto_depIdxs = nil
}
