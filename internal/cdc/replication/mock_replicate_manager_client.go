// Code generated by mockery v2.53.3. DO NOT EDIT.

package replication

import (
	streamingpb "github.com/milvus-io/milvus/pkg/v2/proto/streamingpb"
	mock "github.com/stretchr/testify/mock"
)

// MockReplicateManagerClient is an autogenerated mock type for the ReplicateManagerClient type
type MockReplicateManagerClient struct {
	mock.Mock
}

type MockReplicateManagerClient_Expecter struct {
	mock *mock.Mock
}

func (_m *MockReplicateManagerClient) EXPECT() *MockReplicateManagerClient_Expecter {
	return &MockReplicateManagerClient_Expecter{mock: &_m.Mock}
}

// Close provides a mock function with no fields
func (_m *MockReplicateManagerClient) Close() {
	_m.Called()
}

// MockReplicateManagerClient_Close_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Close'
type MockReplicateManagerClient_Close_Call struct {
	*mock.Call
}

// Close is a helper method to define mock.On call
func (_e *MockReplicateManagerClient_Expecter) Close() *MockReplicateManagerClient_Close_Call {
	return &MockReplicateManagerClient_Close_Call{Call: _e.mock.On("Close")}
}

func (_c *MockReplicateManagerClient_Close_Call) Run(run func()) *MockReplicateManagerClient_Close_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockReplicateManagerClient_Close_Call) Return() *MockReplicateManagerClient_Close_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockReplicateManagerClient_Close_Call) RunAndReturn(run func()) *MockReplicateManagerClient_Close_Call {
	_c.Run(run)
	return _c
}

// CreateReplicator provides a mock function with given fields: replicateInfo
func (_m *MockReplicateManagerClient) CreateReplicator(replicateInfo *streamingpb.ReplicatePChannelMeta) {
	_m.Called(replicateInfo)
}

// MockReplicateManagerClient_CreateReplicator_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateReplicator'
type MockReplicateManagerClient_CreateReplicator_Call struct {
	*mock.Call
}

// CreateReplicator is a helper method to define mock.On call
//   - replicateInfo *streamingpb.ReplicatePChannelMeta
func (_e *MockReplicateManagerClient_Expecter) CreateReplicator(replicateInfo interface{}) *MockReplicateManagerClient_CreateReplicator_Call {
	return &MockReplicateManagerClient_CreateReplicator_Call{Call: _e.mock.On("CreateReplicator", replicateInfo)}
}

func (_c *MockReplicateManagerClient_CreateReplicator_Call) Run(run func(replicateInfo *streamingpb.ReplicatePChannelMeta)) *MockReplicateManagerClient_CreateReplicator_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*streamingpb.ReplicatePChannelMeta))
	})
	return _c
}

func (_c *MockReplicateManagerClient_CreateReplicator_Call) Return() *MockReplicateManagerClient_CreateReplicator_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockReplicateManagerClient_CreateReplicator_Call) RunAndReturn(run func(*streamingpb.ReplicatePChannelMeta)) *MockReplicateManagerClient_CreateReplicator_Call {
	_c.Run(run)
	return _c
}

// RemoveOutdatedReplicators provides a mock function with given fields: aliveReplicates
func (_m *MockReplicateManagerClient) RemoveOutdatedReplicators(aliveReplicates []*streamingpb.ReplicatePChannelMeta) {
	_m.Called(aliveReplicates)
}

// MockReplicateManagerClient_RemoveOutdatedReplicators_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'RemoveOutdatedReplicators'
type MockReplicateManagerClient_RemoveOutdatedReplicators_Call struct {
	*mock.Call
}

// RemoveOutdatedReplicators is a helper method to define mock.On call
//   - aliveReplicates []*streamingpb.ReplicatePChannelMeta
func (_e *MockReplicateManagerClient_Expecter) RemoveOutdatedReplicators(aliveReplicates interface{}) *MockReplicateManagerClient_RemoveOutdatedReplicators_Call {
	return &MockReplicateManagerClient_RemoveOutdatedReplicators_Call{Call: _e.mock.On("RemoveOutdatedReplicators", aliveReplicates)}
}

func (_c *MockReplicateManagerClient_RemoveOutdatedReplicators_Call) Run(run func(aliveReplicates []*streamingpb.ReplicatePChannelMeta)) *MockReplicateManagerClient_RemoveOutdatedReplicators_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].([]*streamingpb.ReplicatePChannelMeta))
	})
	return _c
}

func (_c *MockReplicateManagerClient_RemoveOutdatedReplicators_Call) Return() *MockReplicateManagerClient_RemoveOutdatedReplicators_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockReplicateManagerClient_RemoveOutdatedReplicators_Call) RunAndReturn(run func([]*streamingpb.ReplicatePChannelMeta)) *MockReplicateManagerClient_RemoveOutdatedReplicators_Call {
	_c.Run(run)
	return _c
}

// RemoveReplicator provides a mock function with given fields: replicateInfo
func (_m *MockReplicateManagerClient) RemoveReplicator(replicateInfo *streamingpb.ReplicatePChannelMeta) {
	_m.Called(replicateInfo)
}

// MockReplicateManagerClient_RemoveReplicator_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'RemoveReplicator'
type MockReplicateManagerClient_RemoveReplicator_Call struct {
	*mock.Call
}

// RemoveReplicator is a helper method to define mock.On call
//   - replicateInfo *streamingpb.ReplicatePChannelMeta
func (_e *MockReplicateManagerClient_Expecter) RemoveReplicator(replicateInfo interface{}) *MockReplicateManagerClient_RemoveReplicator_Call {
	return &MockReplicateManagerClient_RemoveReplicator_Call{Call: _e.mock.On("RemoveReplicator", replicateInfo)}
}

func (_c *MockReplicateManagerClient_RemoveReplicator_Call) Run(run func(replicateInfo *streamingpb.ReplicatePChannelMeta)) *MockReplicateManagerClient_RemoveReplicator_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*streamingpb.ReplicatePChannelMeta))
	})
	return _c
}

func (_c *MockReplicateManagerClient_RemoveReplicator_Call) Return() *MockReplicateManagerClient_RemoveReplicator_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockReplicateManagerClient_RemoveReplicator_Call) RunAndReturn(run func(*streamingpb.ReplicatePChannelMeta)) *MockReplicateManagerClient_RemoveReplicator_Call {
	_c.Run(run)
	return _c
}

// NewMockReplicateManagerClient creates a new instance of MockReplicateManagerClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockReplicateManagerClient(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockReplicateManagerClient {
	mock := &MockReplicateManagerClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
