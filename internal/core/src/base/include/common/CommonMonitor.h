// Copyright (C) 2019-2020 Zilliz. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance
// with the License. You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed under the License
// is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
// or implied. See the License for the specific language governing permissions and limitations under the License

#pragma once

#include "common/PrometheusClient.h"

namespace milvus::monitor {

// --- caching layer metrics ---
DECLARE_PROMETHEUS_GAUGE_FAMILY(internal_cache_slot_count);
DECLARE_PROMETHEUS_GAUGE(internal_cache_slot_count_memory);
DECLARE_PROMETHEUS_GAUGE(internal_cache_slot_count_disk);
DECLARE_PROMETHEUS_GAUGE(internal_cache_slot_count_mixed);

DECLARE_PROMETHEUS_GAUGE_FAMILY(internal_cache_cell_count);
DECLARE_PROMETHEUS_GAUGE(internal_cache_cell_count_memory);
DECLARE_PROMETHEUS_GAUGE(internal_cache_cell_count_disk);
DECLARE_PROMETHEUS_GAUGE(internal_cache_cell_count_mixed);

DECLARE_PROMETHEUS_GAUGE_FAMILY(internal_cache_cell_loaded_count);
DECLARE_PROMETHEUS_GAUGE(internal_cache_cell_loaded_count_memory);
DECLARE_PROMETHEUS_GAUGE(internal_cache_cell_loaded_count_disk);
DECLARE_PROMETHEUS_GAUGE(internal_cache_cell_loaded_count_mixed);

DECLARE_PROMETHEUS_HISTOGRAM_FAMILY(internal_cache_load_latency);
DECLARE_PROMETHEUS_HISTOGRAM(internal_cache_load_latency_memory);
DECLARE_PROMETHEUS_HISTOGRAM(internal_cache_load_latency_disk);
DECLARE_PROMETHEUS_HISTOGRAM(internal_cache_load_latency_mixed);

DECLARE_PROMETHEUS_COUNTER_FAMILY(internal_cache_op_result_count);
DECLARE_PROMETHEUS_COUNTER(internal_cache_op_result_count_hit_memory);
DECLARE_PROMETHEUS_COUNTER(internal_cache_op_result_count_hit_disk);
DECLARE_PROMETHEUS_COUNTER(internal_cache_op_result_count_hit_mixed);
DECLARE_PROMETHEUS_COUNTER(internal_cache_op_result_count_miss_memory);
DECLARE_PROMETHEUS_COUNTER(internal_cache_op_result_count_miss_disk);
DECLARE_PROMETHEUS_COUNTER(internal_cache_op_result_count_miss_mixed);

DECLARE_PROMETHEUS_GAUGE_FAMILY(internal_cache_used_bytes);
DECLARE_PROMETHEUS_GAUGE(internal_cache_used_bytes_memory);
DECLARE_PROMETHEUS_GAUGE(internal_cache_used_bytes_disk);

DECLARE_PROMETHEUS_GAUGE_FAMILY(internal_cache_capacity_bytes);
DECLARE_PROMETHEUS_GAUGE(internal_cache_capacity_bytes_memory);
DECLARE_PROMETHEUS_GAUGE(internal_cache_capacity_bytes_disk);

DECLARE_PROMETHEUS_COUNTER_FAMILY(internal_cache_cell_eviction_count);
DECLARE_PROMETHEUS_COUNTER(internal_cache_cell_eviction_count_memory);
DECLARE_PROMETHEUS_COUNTER(internal_cache_cell_eviction_count_disk);
DECLARE_PROMETHEUS_COUNTER(internal_cache_cell_eviction_count_mixed);

DECLARE_PROMETHEUS_COUNTER_FAMILY(internal_cache_evicted_bytes);
DECLARE_PROMETHEUS_COUNTER(internal_cache_evicted_bytes_memory);
DECLARE_PROMETHEUS_COUNTER(internal_cache_evicted_bytes_disk);

DECLARE_PROMETHEUS_COUNTER_FAMILY(internal_cache_eviction_event_count);
DECLARE_PROMETHEUS_COUNTER(internal_cache_eviction_event_count_all);

DECLARE_PROMETHEUS_HISTOGRAM_FAMILY(internal_cache_item_lifetime_seconds);
DECLARE_PROMETHEUS_HISTOGRAM(internal_cache_item_lifetime_seconds_memory);
DECLARE_PROMETHEUS_HISTOGRAM(internal_cache_item_lifetime_seconds_disk);
DECLARE_PROMETHEUS_HISTOGRAM(internal_cache_item_lifetime_seconds_mixed);

DECLARE_PROMETHEUS_COUNTER_FAMILY(internal_cache_load_count);
DECLARE_PROMETHEUS_COUNTER(internal_cache_load_count_success_memory);
DECLARE_PROMETHEUS_COUNTER(internal_cache_load_count_success_disk);
DECLARE_PROMETHEUS_COUNTER(internal_cache_load_count_success_mixed);
DECLARE_PROMETHEUS_COUNTER(internal_cache_load_count_fail_memory);
DECLARE_PROMETHEUS_COUNTER(internal_cache_load_count_fail_disk);
DECLARE_PROMETHEUS_COUNTER(internal_cache_load_count_fail_mixed);

DECLARE_PROMETHEUS_GAUGE_FAMILY(internal_cache_memory_overhead_bytes);
DECLARE_PROMETHEUS_GAUGE(internal_cache_memory_overhead_bytes_memory);
DECLARE_PROMETHEUS_GAUGE(internal_cache_memory_overhead_bytes_disk);
DECLARE_PROMETHEUS_GAUGE(internal_cache_memory_overhead_bytes_mixed);

// --- caching layer metrics end ---

}  // namespace milvus::monitor