// Code generated by mockery v2.53.3. DO NOT EDIT.

package mock_recovery

import (
	message "github.com/milvus-io/milvus/pkg/v2/streaming/util/message"
	mock "github.com/stretchr/testify/mock"
)

// MockRecoveryStorage is an autogenerated mock type for the RecoveryStorage type
type MockRecoveryStorage struct {
	mock.Mock
}

type MockRecoveryStorage_Expecter struct {
	mock *mock.Mock
}

func (_m *MockRecoveryStorage) EXPECT() *MockRecoveryStorage_Expecter {
	return &MockRecoveryStorage_Expecter{mock: &_m.Mock}
}

// Close provides a mock function with no fields
func (_m *MockRecoveryStorage) Close() {
	_m.Called()
}

// MockRecoveryStorage_Close_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Close'
type MockRecoveryStorage_Close_Call struct {
	*mock.Call
}

// Close is a helper method to define mock.On call
func (_e *MockRecoveryStorage_Expecter) Close() *MockRecoveryStorage_Close_Call {
	return &MockRecoveryStorage_Close_Call{Call: _e.mock.On("Close")}
}

func (_c *MockRecoveryStorage_Close_Call) Run(run func()) *MockRecoveryStorage_Close_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockRecoveryStorage_Close_Call) Return() *MockRecoveryStorage_Close_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockRecoveryStorage_Close_Call) RunAndReturn(run func()) *MockRecoveryStorage_Close_Call {
	_c.Run(run)
	return _c
}

// ObserveMessage provides a mock function with given fields: msg
func (_m *MockRecoveryStorage) ObserveMessage(msg message.ImmutableMessage) {
	_m.Called(msg)
}

// MockRecoveryStorage_ObserveMessage_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ObserveMessage'
type MockRecoveryStorage_ObserveMessage_Call struct {
	*mock.Call
}

// ObserveMessage is a helper method to define mock.On call
//   - msg message.ImmutableMessage
func (_e *MockRecoveryStorage_Expecter) ObserveMessage(msg interface{}) *MockRecoveryStorage_ObserveMessage_Call {
	return &MockRecoveryStorage_ObserveMessage_Call{Call: _e.mock.On("ObserveMessage", msg)}
}

func (_c *MockRecoveryStorage_ObserveMessage_Call) Run(run func(msg message.ImmutableMessage)) *MockRecoveryStorage_ObserveMessage_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(message.ImmutableMessage))
	})
	return _c
}

func (_c *MockRecoveryStorage_ObserveMessage_Call) Return() *MockRecoveryStorage_ObserveMessage_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockRecoveryStorage_ObserveMessage_Call) RunAndReturn(run func(message.ImmutableMessage)) *MockRecoveryStorage_ObserveMessage_Call {
	_c.Run(run)
	return _c
}

// NewMockRecoveryStorage creates a new instance of MockRecoveryStorage. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockRecoveryStorage(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockRecoveryStorage {
	mock := &MockRecoveryStorage{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
